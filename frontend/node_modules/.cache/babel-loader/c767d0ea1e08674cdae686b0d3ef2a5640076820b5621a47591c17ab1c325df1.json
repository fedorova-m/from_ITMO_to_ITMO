{"ast":null,"code":"var _jsxFileName = \"/Users/mariafedorova/Desktop/from_itmo_to_itmo/frontend/src/pages/routePage/routePage.jsx\",\n  _s = $RefreshSig$();\nimport \"./routePage.scss\";\nimport { Header } from \"../../components/header/header\";\nimport { useEffect, useState } from \"react\";\nimport { ProfileModal } from \"../../components/profileModal/profileModal\";\nimport array from \"../../array.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RoutePage = ({\n  profileModal,\n  setProfileModal,\n  textProfileModalActive,\n  setTextProfileModalActive,\n  routeUser\n}) => {\n  _s();\n  const [routes, setRoutes] = useState([]);\n  const routeUserRoutePage = () => {\n    const startIndex = routeUser.start;\n    const endIndex = routeUser.end;\n\n    // Массив для всех маршрутов\n    let routesArray = [];\n\n    // Прямой маршрут (с startIndex по endIndex)\n    let forward = [];\n    let i = startIndex;\n    while (i !== endIndex) {\n      forward.push(...array[i % array.length].slice(1)); // Пропускаем первый элемент с названиями корпусов\n      i = (i + 1) % array.length;\n    }\n\n    // Обратный маршрут (с endIndex по startIndex)\n    let backward = [];\n    let j = endIndex;\n    while (j !== startIndex) {\n      let prev = (j - 1 + array.length) % array.length;\n      backward.push(...array[prev].slice(1));\n      j = prev;\n    }\n\n    // Находим имена начальных и конечных точек\n    const startName = array[startIndex][0].start;\n    const endName = array[endIndex - 1 < 0 ? array.length - 1 : endIndex - 1][0].end;\n\n    // Важно: если путь проходит через промежуточные корпуса, разделяем маршруты на части\n    const getRouteSegment = (fromIndex, toIndex) => {\n      let segment = [];\n      let k = fromIndex;\n      while (k !== toIndex) {\n        segment.push(...array[k % array.length].slice(1));\n        k = (k + 1) % array.length;\n      }\n      return segment;\n    };\n    if (startIndex !== endIndex) {\n      // Прямой маршрут через промежуточный корпус, если они не соседние\n      if (startIndex + 1 !== endIndex && startIndex !== endIndex + 1) {\n        const middleIndex = (startIndex + 1) % array.length; // Промежуточный корпус\n        const routeSegment1 = getRouteSegment(startIndex, middleIndex);\n        const routeSegment2 = getRouteSegment(middleIndex, endIndex);\n        routesArray.push({\n          direction: \"Прямой маршрут (через промежуточный корпус)\",\n          from: startName,\n          to: endName,\n          data: [...routeSegment1, ...routeSegment2] // объединяем маршруты\n        });\n      } else {\n        routesArray.push({\n          direction: \"Прямой маршрут\",\n          from: startName,\n          to: endName,\n          data: forward\n        });\n      }\n\n      // Обратный маршрут через промежуточный корпус, если они не соседние\n      if (startIndex + 1 !== endIndex && startIndex !== endIndex + 1) {\n        const middleIndex = (startIndex + 1) % array.length;\n        const routeSegment1 = getRouteSegment(endIndex, middleIndex);\n        const routeSegment2 = getRouteSegment(middleIndex, startIndex);\n        routesArray.push({\n          direction: \"Обратный маршрут (через промежуточный корпус)\",\n          from: endName,\n          to: startName,\n          data: [...routeSegment1, ...routeSegment2].reverse() // объединяем маршруты\n        });\n      } else {\n        routesArray.push({\n          direction: \"Обратный маршрут\",\n          from: endName,\n          to: startName,\n          data: backward.reverse()\n        });\n      }\n    }\n  };\n  useEffect(() => {\n    if ((routeUser === null || routeUser === void 0 ? void 0 : routeUser.start) != null && (routeUser === null || routeUser === void 0 ? void 0 : routeUser.end) != null) {\n      const newRoutes = routeUserRoutePage();\n      setRoutes(newRoutes);\n    }\n  }, [routeUser]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"routeePage\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      setProfileModal: setProfileModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"titleRoutePage\",\n      children: \"\\u0412\\u0430\\u0448 \\u043C\\u0430\\u0440\\u0448\\u0440\\u0443\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"BlockRoutePage\",\n      children: routes.map((route, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"directionTitle\",\n          children: route.direction\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fromTo\",\n          children: [route.from, \" \\u2192 \", route.to]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), route.data.map((place, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"BlockRoutePage\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"titlePlaceRoutePage\",\n            children: place.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"textPlaceRoutePage\",\n            children: place.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"textPlaceRoutePage\",\n            children: place.info\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this))]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), profileModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profileModalRoutesPage\",\n      children: /*#__PURE__*/_jsxDEV(ProfileModal, {\n        textProfileModalActive: textProfileModalActive,\n        setTextProfileModalActive: setTextProfileModalActive\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(RoutePage, \"7IWgUVe/IEbspHwegjzMecC2qRQ=\");\n_c = RoutePage;\nvar _c;\n$RefreshReg$(_c, \"RoutePage\");","map":{"version":3,"names":["Header","useEffect","useState","ProfileModal","array","jsxDEV","_jsxDEV","RoutePage","profileModal","setProfileModal","textProfileModalActive","setTextProfileModalActive","routeUser","_s","routes","setRoutes","routeUserRoutePage","startIndex","start","endIndex","end","routesArray","forward","i","push","length","slice","backward","j","prev","startName","endName","getRouteSegment","fromIndex","toIndex","segment","k","middleIndex","routeSegment1","routeSegment2","direction","from","to","data","reverse","newRoutes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","route","place","index","name","address","info","_c","$RefreshReg$"],"sources":["/Users/mariafedorova/Desktop/from_itmo_to_itmo/frontend/src/pages/routePage/routePage.jsx"],"sourcesContent":["import \"./routePage.scss\"\nimport { Header } from \"../../components/header/header\"\nimport { useEffect, useState } from \"react\"\nimport { ProfileModal } from \"../../components/profileModal/profileModal\"\nimport array from \"../../array.js\"\nexport const RoutePage = ({\n  profileModal,\n  setProfileModal,\n  textProfileModalActive,\n  setTextProfileModalActive,\n  routeUser,\n}) => {\n  const [routes, setRoutes] = useState([])\n  const routeUserRoutePage = () => {\n    const startIndex = routeUser.start\n    const endIndex = routeUser.end\n\n    // Массив для всех маршрутов\n    let routesArray = []\n\n    // Прямой маршрут (с startIndex по endIndex)\n    let forward = []\n    let i = startIndex\n    while (i !== endIndex) {\n      forward.push(...array[i % array.length].slice(1)) // Пропускаем первый элемент с названиями корпусов\n      i = (i + 1) % array.length\n    }\n\n    // Обратный маршрут (с endIndex по startIndex)\n    let backward = []\n    let j = endIndex\n    while (j !== startIndex) {\n      let prev = (j - 1 + array.length) % array.length\n      backward.push(...array[prev].slice(1))\n      j = prev\n    }\n\n    // Находим имена начальных и конечных точек\n    const startName = array[startIndex][0].start\n    const endName =\n      array[endIndex - 1 < 0 ? array.length - 1 : endIndex - 1][0].end\n\n    // Важно: если путь проходит через промежуточные корпуса, разделяем маршруты на части\n    const getRouteSegment = (fromIndex, toIndex) => {\n      let segment = []\n      let k = fromIndex\n      while (k !== toIndex) {\n        segment.push(...array[k % array.length].slice(1))\n        k = (k + 1) % array.length\n      }\n      return segment\n    }\n\n    if (startIndex !== endIndex) {\n      // Прямой маршрут через промежуточный корпус, если они не соседние\n      if (startIndex + 1 !== endIndex && startIndex !== endIndex + 1) {\n        const middleIndex = (startIndex + 1) % array.length // Промежуточный корпус\n        const routeSegment1 = getRouteSegment(startIndex, middleIndex)\n        const routeSegment2 = getRouteSegment(middleIndex, endIndex)\n        routesArray.push({\n          direction: \"Прямой маршрут (через промежуточный корпус)\",\n          from: startName,\n          to: endName,\n          data: [...routeSegment1, ...routeSegment2], // объединяем маршруты\n        })\n      } else {\n        routesArray.push({\n          direction: \"Прямой маршрут\",\n          from: startName,\n          to: endName,\n          data: forward,\n        })\n      }\n\n      // Обратный маршрут через промежуточный корпус, если они не соседние\n      if (startIndex + 1 !== endIndex && startIndex !== endIndex + 1) {\n        const middleIndex = (startIndex + 1) % array.length\n        const routeSegment1 = getRouteSegment(endIndex, middleIndex)\n        const routeSegment2 = getRouteSegment(middleIndex, startIndex)\n        routesArray.push({\n          direction: \"Обратный маршрут (через промежуточный корпус)\",\n          from: endName,\n          to: startName,\n          data: [...routeSegment1, ...routeSegment2].reverse(), // объединяем маршруты\n        })\n      } else {\n        routesArray.push({\n          direction: \"Обратный маршрут\",\n          from: endName,\n          to: startName,\n          data: backward.reverse(),\n        })\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (routeUser?.start != null && routeUser?.end != null) {\n      const newRoutes = routeUserRoutePage()\n      setRoutes(newRoutes)\n    }\n  }, [routeUser])\n\n  return (\n    <div className=\"routeePage\">\n      <Header setProfileModal={setProfileModal} />\n      <div className=\"titleRoutePage\">Ваш маршрут</div>\n      <div className=\"BlockRoutePage\">\n        {routes.map((route, i) => (\n          <div key={i}>\n            <div className=\"directionTitle\">{route.direction}</div>\n            <div className=\"fromTo\">\n              {route.from} → {route.to}\n            </div>\n            {route.data.map((place, index) => (\n              <div className=\"BlockRoutePage\" key={index}>\n                <div className=\"titlePlaceRoutePage\">{place.name}</div>\n                <div className=\"textPlaceRoutePage\">{place.address}</div>\n                <div className=\"textPlaceRoutePage\">{place.info}</div>\n                {/* <img src={`/img/${place.img}`} alt={place.name} /> */}\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n      {profileModal && (\n        <div className=\"profileModalRoutesPage\">\n          <ProfileModal\n            textProfileModalActive={textProfileModalActive}\n            setTextProfileModalActive={setTextProfileModalActive}\n          />\n        </div>\n      )}\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}