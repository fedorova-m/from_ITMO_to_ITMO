{"ast":null,"code":"var _jsxFileName = \"/Users/mariafedorova/Desktop/from_itmo_to_itmo/frontend/src/pages/routePage/routePage.jsx\",\n  _s = $RefreshSig$();\nimport \"./routePage.scss\";\nimport { Header } from \"../../components/header/header\";\nimport { useEffect, useState } from \"react\";\nimport { ProfileModal } from \"../../components/profileModal/profileModal\";\nimport { po_chas, protiv_chas } from \"../../array.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RoutePage = ({\n  profileModal,\n  setProfileModal,\n  textProfileModalActive,\n  setTextProfileModalActive,\n  routeUser\n}) => {\n  _s();\n  const [routes, setRoutes] = useState([]);\n  const routeUserRoutePage = () => {\n    var _chosenRoute$, _chosenRoute;\n    const startIndex = routeUser.start;\n    const endIndex = routeUser.end;\n\n    // Вычисляем расстояние по часовой стрелке и против часовой стрелки\n    const clockwiseRoute = po_chas[startIndex] || [];\n    const counterClockwiseRoute = protiv_chas[startIndex] || [];\n\n    // Выбираем более короткий путь\n    let chosenRoute = [];\n    let direction = \"\";\n    if (clockwiseRoute.length <= counterClockwiseRoute.length) {\n      chosenRoute = clockwiseRoute;\n      direction = \"Прямой маршрут\";\n    } else {\n      chosenRoute = counterClockwiseRoute;\n      direction = \"Обратный маршрут\";\n    }\n\n    // Определяем старт и финиш\n    const startName = (_chosenRoute$ = chosenRoute[0]) === null || _chosenRoute$ === void 0 ? void 0 : _chosenRoute$.start;\n    const endName = (_chosenRoute = chosenRoute[chosenRoute.length - 1]) === null || _chosenRoute === void 0 ? void 0 : _chosenRoute.end;\n    return [{\n      direction,\n      from: startName,\n      to: endName,\n      data: chosenRoute.slice(1) // Скидываем первый элемент с названиями\n    }];\n  };\n  useEffect(() => {\n    if ((routeUser === null || routeUser === void 0 ? void 0 : routeUser.start) != null && (routeUser === null || routeUser === void 0 ? void 0 : routeUser.end) != null) {\n      const newRoutes = routeUserRoutePage();\n      setRoutes(newRoutes);\n    }\n  }, [routeUser]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"routeePage\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      setProfileModal: setProfileModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"titleRoutePage\",\n      children: \"\\u0412\\u0430\\u0448 \\u043C\\u0430\\u0440\\u0448\\u0440\\u0443\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"BlockRoutePage\",\n      children: routes.map((route, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"directionTitle\",\n          children: route.direction\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fromTo\",\n          children: [route.from, \" \\u2192 \", route.to]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), route.data.map((place, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"BlockRoutePage\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"titlePlaceRoutePage\",\n            children: place.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"textPlaceRoutePage\",\n            children: place.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"textPlaceRoutePage\",\n            children: place.info\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this))]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), profileModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profileModalRoutesPage\",\n      children: /*#__PURE__*/_jsxDEV(ProfileModal, {\n        textProfileModalActive: textProfileModalActive,\n        setTextProfileModalActive: setTextProfileModalActive\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(RoutePage, \"7IWgUVe/IEbspHwegjzMecC2qRQ=\");\n_c = RoutePage;\nvar _c;\n$RefreshReg$(_c, \"RoutePage\");","map":{"version":3,"names":["Header","useEffect","useState","ProfileModal","po_chas","protiv_chas","jsxDEV","_jsxDEV","RoutePage","profileModal","setProfileModal","textProfileModalActive","setTextProfileModalActive","routeUser","_s","routes","setRoutes","routeUserRoutePage","_chosenRoute$","_chosenRoute","startIndex","start","endIndex","end","clockwiseRoute","counterClockwiseRoute","chosenRoute","direction","length","startName","endName","from","to","data","slice","newRoutes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","route","i","place","index","name","address","info","_c","$RefreshReg$"],"sources":["/Users/mariafedorova/Desktop/from_itmo_to_itmo/frontend/src/pages/routePage/routePage.jsx"],"sourcesContent":["import \"./routePage.scss\"\nimport { Header } from \"../../components/header/header\"\nimport { useEffect, useState } from \"react\"\nimport { ProfileModal } from \"../../components/profileModal/profileModal\"\nimport { po_chas, protiv_chas } from \"../../array.js\"\nexport const RoutePage = ({\n  profileModal,\n  setProfileModal,\n  textProfileModalActive,\n  setTextProfileModalActive,\n  routeUser,\n}) => {\n  const [routes, setRoutes] = useState([])\n  const routeUserRoutePage = () => {\n    const startIndex = routeUser.start\n    const endIndex = routeUser.end\n\n    // Вычисляем расстояние по часовой стрелке и против часовой стрелки\n    const clockwiseRoute = po_chas[startIndex] || []\n    const counterClockwiseRoute = protiv_chas[startIndex] || []\n\n    // Выбираем более короткий путь\n    let chosenRoute = []\n    let direction = \"\"\n    if (clockwiseRoute.length <= counterClockwiseRoute.length) {\n      chosenRoute = clockwiseRoute\n      direction = \"Прямой маршрут\"\n    } else {\n      chosenRoute = counterClockwiseRoute\n      direction = \"Обратный маршрут\"\n    }\n\n    // Определяем старт и финиш\n    const startName = chosenRoute[0]?.start\n    const endName = chosenRoute[chosenRoute.length - 1]?.end\n\n    return [\n      {\n        direction,\n        from: startName,\n        to: endName,\n        data: chosenRoute.slice(1), // Скидываем первый элемент с названиями\n      },\n    ]\n  }\n\n  useEffect(() => {\n    if (routeUser?.start != null && routeUser?.end != null) {\n      const newRoutes = routeUserRoutePage()\n      setRoutes(newRoutes)\n    }\n  }, [routeUser])\n\n  return (\n    <div className=\"routeePage\">\n      <Header setProfileModal={setProfileModal} />\n      <div className=\"titleRoutePage\">Ваш маршрут</div>\n      <div className=\"BlockRoutePage\">\n        {routes.map((route, i) => (\n          <div key={i}>\n            <div className=\"directionTitle\">{route.direction}</div>\n            <div className=\"fromTo\">\n              {route.from} → {route.to}\n            </div>\n            {route.data.map((place, index) => (\n              <div className=\"BlockRoutePage\" key={index}>\n                <div className=\"titlePlaceRoutePage\">{place.name}</div>\n                <div className=\"textPlaceRoutePage\">{place.address}</div>\n                <div className=\"textPlaceRoutePage\">{place.info}</div>\n                {/* <img src={`/img/${place.img}`} alt={place.name} /> */}\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n      {profileModal && (\n        <div className=\"profileModalRoutesPage\">\n          <ProfileModal\n            textProfileModalActive={textProfileModalActive}\n            setTextProfileModalActive={setTextProfileModalActive}\n          />\n        </div>\n      )}\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}