{"ast":null,"code":"var _jsxFileName = \"/Users/mariafedorova/Desktop/from_itmo_to_itmo/frontend/src/pages/routePage/routePage.jsx\",\n  _s = $RefreshSig$();\nimport \"./routePage.scss\";\nimport { Header } from \"../../components/header/header\";\nimport { useEffect, useState } from \"react\";\nimport { ProfileModal } from \"../../components/profileModal/profileModal\";\nimport array from \"../../array.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RoutePage = ({\n  profileModal,\n  setProfileModal,\n  textProfileModalActive,\n  setTextProfileModalActive,\n  routeUser\n}) => {\n  _s();\n  const [routes, setRoutes] = useState([]);\n  const routeUserRoutePage = () => {\n    const startIndex = routeUser.start;\n    const endIndex = routeUser.end;\n    const arrayLength = array.length;\n\n    // 1. Прямой маршрут (по часовой стрелке)\n    let forwardData = [];\n    let forwardSteps = 0;\n    let current = startIndex;\n    while (current !== endIndex) {\n      forwardData.push(...array[current].slice(1));\n      current = (current + 1) % arrayLength;\n      forwardSteps++;\n    }\n\n    // 2. Обратный маршрут (против часовой стрелки)\n    let backwardData = [];\n    let backwardSteps = 0;\n    current = startIndex;\n    while (current !== endIndex) {\n      current = (current - 1 + arrayLength) % arrayLength;\n      backwardData.push(...[...array[current].slice(1)].reverse()); // reverse: от end к start\n      backwardSteps++;\n    }\n    const startName = array[startIndex][0].start;\n    const endName = array[endIndex][0].start;\n\n    // Сравнение по количеству шагов (корпусов)\n    const chosen = forwardSteps <= backwardSteps ? {\n      direction: \"Прямой маршрут\",\n      from: startName,\n      to: endName,\n      data: forwardData\n    } : {\n      direction: \"Обратный маршрут\",\n      from: startName,\n      to: endName,\n      data: backwardData\n    };\n\n    // Массив шагов для отображения промежуточных корпусов\n    const steps = [];\n    const routeData = chosen.data;\n    let currentBuilding = null;\n    let places = [];\n\n    // Создаем шаги для промежуточных корпусов\n    routeData.forEach(place => {\n      const buildingName = place.start;\n      if (currentBuilding && currentBuilding !== buildingName) {\n        // Если это новый корпус, то добавляем предыдущий корпус в steps\n        steps.push({\n          building: currentBuilding,\n          places\n        });\n        places = []; // Очищаем список объектов для нового корпуса\n      }\n      currentBuilding = buildingName;\n      places.push(place);\n    });\n\n    // Добавляем последний корпус в steps\n    if (currentBuilding && places.length > 0) {\n      steps.push({\n        building: currentBuilding,\n        places\n      });\n    }\n    return {\n      ...chosen,\n      steps\n    };\n  };\n  useEffect(() => {\n    if ((routeUser === null || routeUser === void 0 ? void 0 : routeUser.start) != null && (routeUser === null || routeUser === void 0 ? void 0 : routeUser.end) != null) {\n      const newRoutes = routeUserRoutePage();\n      setRoutes([newRoutes]); // Обновляем состояние с маршрутом\n    }\n  }, [routeUser]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"routeePage\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      setProfileModal: setProfileModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"titleRoutePage\",\n      children: \"\\u0412\\u0430\\u0448 \\u043C\\u0430\\u0440\\u0448\\u0440\\u0443\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"BlockRoutePage\",\n      children: routes.map((route, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"directionTitle\",\n          children: route.direction\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fromTo\",\n          children: [route.from, \" \\u2192 \", route.to]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), route.steps.map((step, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"titlePlaceRoutePage\",\n            children: step.building\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this), step.places.map((place, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"BlockRoutePage\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"titlePlaceRoutePage\",\n              children: place.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"textPlaceRoutePage\",\n              children: place.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"textPlaceRoutePage\",\n              children: place.info\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 21\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 19\n          }, this))]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this))]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), profileModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profileModalRoutesPage\",\n      children: /*#__PURE__*/_jsxDEV(ProfileModal, {\n        textProfileModalActive: textProfileModalActive,\n        setTextProfileModalActive: setTextProfileModalActive\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(RoutePage, \"7IWgUVe/IEbspHwegjzMecC2qRQ=\");\n_c = RoutePage;\nvar _c;\n$RefreshReg$(_c, \"RoutePage\");","map":{"version":3,"names":["Header","useEffect","useState","ProfileModal","array","jsxDEV","_jsxDEV","RoutePage","profileModal","setProfileModal","textProfileModalActive","setTextProfileModalActive","routeUser","_s","routes","setRoutes","routeUserRoutePage","startIndex","start","endIndex","end","arrayLength","length","forwardData","forwardSteps","current","push","slice","backwardData","backwardSteps","reverse","startName","endName","chosen","direction","from","to","data","steps","routeData","currentBuilding","places","forEach","place","buildingName","building","newRoutes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","route","i","step","index","idx","name","address","info","_c","$RefreshReg$"],"sources":["/Users/mariafedorova/Desktop/from_itmo_to_itmo/frontend/src/pages/routePage/routePage.jsx"],"sourcesContent":["import \"./routePage.scss\"\nimport { Header } from \"../../components/header/header\"\nimport { useEffect, useState } from \"react\"\nimport { ProfileModal } from \"../../components/profileModal/profileModal\"\nimport array from \"../../array.js\"\n\nexport const RoutePage = ({\n  profileModal,\n  setProfileModal,\n  textProfileModalActive,\n  setTextProfileModalActive,\n  routeUser,\n}) => {\n  const [routes, setRoutes] = useState([])\n\n  const routeUserRoutePage = () => {\n    const startIndex = routeUser.start\n    const endIndex = routeUser.end\n    const arrayLength = array.length\n\n    // 1. Прямой маршрут (по часовой стрелке)\n    let forwardData = []\n    let forwardSteps = 0\n    let current = startIndex\n\n    while (current !== endIndex) {\n      forwardData.push(...array[current].slice(1))\n      current = (current + 1) % arrayLength\n      forwardSteps++\n    }\n\n    // 2. Обратный маршрут (против часовой стрелки)\n    let backwardData = []\n    let backwardSteps = 0\n    current = startIndex\n\n    while (current !== endIndex) {\n      current = (current - 1 + arrayLength) % arrayLength\n      backwardData.push(...[...array[current].slice(1)].reverse()) // reverse: от end к start\n      backwardSteps++\n    }\n\n    const startName = array[startIndex][0].start\n    const endName = array[endIndex][0].start\n\n    // Сравнение по количеству шагов (корпусов)\n    const chosen =\n      forwardSteps <= backwardSteps\n        ? {\n            direction: \"Прямой маршрут\",\n            from: startName,\n            to: endName,\n            data: forwardData,\n          }\n        : {\n            direction: \"Обратный маршрут\",\n            from: startName,\n            to: endName,\n            data: backwardData,\n          }\n\n    // Массив шагов для отображения промежуточных корпусов\n    const steps = []\n    const routeData = chosen.data\n    let currentBuilding = null\n    let places = []\n\n    // Создаем шаги для промежуточных корпусов\n    routeData.forEach((place) => {\n      const buildingName = place.start\n      if (currentBuilding && currentBuilding !== buildingName) {\n        // Если это новый корпус, то добавляем предыдущий корпус в steps\n        steps.push({ building: currentBuilding, places })\n        places = [] // Очищаем список объектов для нового корпуса\n      }\n      currentBuilding = buildingName\n      places.push(place)\n    })\n\n    // Добавляем последний корпус в steps\n    if (currentBuilding && places.length > 0) {\n      steps.push({ building: currentBuilding, places })\n    }\n\n    return { ...chosen, steps }\n  }\n\n  useEffect(() => {\n    if (routeUser?.start != null && routeUser?.end != null) {\n      const newRoutes = routeUserRoutePage()\n      setRoutes([newRoutes]) // Обновляем состояние с маршрутом\n    }\n  }, [routeUser])\n\n  return (\n    <div className=\"routeePage\">\n      <Header setProfileModal={setProfileModal} />\n      <div className=\"titleRoutePage\">Ваш маршрут</div>\n      <div className=\"BlockRoutePage\">\n        {routes.map((route, i) => (\n          <div key={i}>\n            <div className=\"directionTitle\">{route.direction}</div>\n            <div className=\"fromTo\">\n              {route.from} → {route.to}\n            </div>\n\n            {/* Отображение маршрута с промежуточными корпусами */}\n            {route.steps.map((step, index) => (\n              <div key={index}>\n                <div className=\"titlePlaceRoutePage\">{step.building}</div>\n                {step.places.map((place, idx) => (\n                  <div className=\"BlockRoutePage\" key={idx}>\n                    <div className=\"titlePlaceRoutePage\">{place.name}</div>\n                    <div className=\"textPlaceRoutePage\">{place.address}</div>\n                    <div className=\"textPlaceRoutePage\">{place.info}</div>\n                    {/* <img src={`/img/${place.img}`} alt={place.name} /> */}\n                  </div>\n                ))}\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n      {profileModal && (\n        <div className=\"profileModalRoutesPage\">\n          <ProfileModal\n            textProfileModalActive={textProfileModalActive}\n            setTextProfileModalActive={setTextProfileModalActive}\n          />\n        </div>\n      )}\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}