{"ast":null,"code":"var _jsxFileName = \"/Users/mariafedorova/Desktop/from_itmo_to_itmo/frontend/src/pages/routePage/routePage.jsx\";\nimport \"./routePage.scss\";\nimport { Header } from \"../../components/header/header\";\nimport { useEffect, useState } from \"react\";\nimport { ProfileModal } from \"../../components/profileModal/profileModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RoutePage = ({\n  profileModal,\n  setProfileModal,\n  textProfileModalActive,\n  setTextProfileModalActive,\n  routeUser\n}) => {\n  // массивы объектов между корпусами по кругу\n  const paths = [[\"Крона → Чайка\"],\n  // Кронва-Чайка\n  [\"Чайка → Лото\"],\n  // Чайка-Лото\n  [\"Лото → Гривцова\"],\n  // Лото-Гривцова\n  [\"Гривцова → Биржа\"],\n  // Гривцова-Биржа\n  [\"Биржа → Крона\"] // Биржа-Кронва\n  ];\n\n  // функция получения пути между двумя корпусами\n  function getPathData(start, end) {\n    const startIndex = buildings.indexOf(start);\n    const endIndex = buildings.indexOf(end);\n    if (startIndex === -1 || endIndex === -1) return [];\n\n    // По часовой\n    let forward = [];\n    let i = startIndex;\n    while (i !== endIndex) {\n      forward.push(paths[i % paths.length]);\n      i = (i + 1) % buildings.length;\n    }\n\n    // Против часовой\n    let backward = [];\n    i = startIndex;\n    while (i !== endIndex) {\n      let prev = (i - 1 + buildings.length) % buildings.length;\n      // здесь переворачиваем массив данных\n      backward.push([...paths[prev]].reverse());\n      i = prev;\n    }\n\n    // Возвращаем либо прямой путь, либо перевёрнутый\n    return forward.length <= backward.length ? forward : backward;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"routeePage\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      setProfileModal: setProfileModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"titleRoutePage\",\n      children: \"\\u0412\\u0430\\u0448 \\u043C\\u0430\\u0440\\u0448\\u0440\\u0443\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"BlockRoutePage\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"titlePlaceRoutePage\",\n        children: \"\\u041A\\u0440\\u043E\\u043D\\u0432\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"textPlaceRoutePage\",\n        children: \"\\u043C\\u0443\\u0437\\u0435\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), profileModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profileModalRoutesPage\",\n      children: /*#__PURE__*/_jsxDEV(ProfileModal, {\n        textProfileModalActive: textProfileModalActive,\n        setTextProfileModalActive: setTextProfileModalActive\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_c = RoutePage;\nvar _c;\n$RefreshReg$(_c, \"RoutePage\");","map":{"version":3,"names":["Header","useEffect","useState","ProfileModal","jsxDEV","_jsxDEV","RoutePage","profileModal","setProfileModal","textProfileModalActive","setTextProfileModalActive","routeUser","paths","getPathData","start","end","startIndex","buildings","indexOf","endIndex","forward","i","push","length","backward","prev","reverse","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mariafedorova/Desktop/from_itmo_to_itmo/frontend/src/pages/routePage/routePage.jsx"],"sourcesContent":["import \"./routePage.scss\"\nimport { Header } from \"../../components/header/header\"\nimport { useEffect, useState } from \"react\"\nimport { ProfileModal } from \"../../components/profileModal/profileModal\"\nexport const RoutePage = ({\n  profileModal,\n  setProfileModal,\n  textProfileModalActive,\n  setTextProfileModalActive,\n  routeUser,\n}) => {\n  // массивы объектов между корпусами по кругу\n  const paths = [\n    [\"Крона → Чайка\"], // Кронва-Чайка\n    [\"Чайка → Лото\"], // Чайка-Лото\n    [\"Лото → Гривцова\"], // Лото-Гривцова\n    [\"Гривцова → Биржа\"], // Гривцова-Биржа\n    [\"Биржа → Крона\"], // Биржа-Кронва\n  ]\n\n  // функция получения пути между двумя корпусами\n  function getPathData(start, end) {\n    const startIndex = buildings.indexOf(start)\n    const endIndex = buildings.indexOf(end)\n\n    if (startIndex === -1 || endIndex === -1) return []\n\n    // По часовой\n    let forward = []\n    let i = startIndex\n    while (i !== endIndex) {\n      forward.push(paths[i % paths.length])\n      i = (i + 1) % buildings.length\n    }\n\n    // Против часовой\n    let backward = []\n    i = startIndex\n    while (i !== endIndex) {\n      let prev = (i - 1 + buildings.length) % buildings.length\n      // здесь переворачиваем массив данных\n      backward.push([...paths[prev]].reverse())\n      i = prev\n    }\n\n    // Возвращаем либо прямой путь, либо перевёрнутый\n    return forward.length <= backward.length ? forward : backward\n  }\n\n  return (\n    <div className=\"routeePage\">\n      <Header setProfileModal={setProfileModal} />\n      <div className=\"titleRoutePage\">Ваш маршрут</div>\n      <div className=\"BlockRoutePage\">\n        <div className=\"titlePlaceRoutePage\">Кронва</div>\n        <div className=\"textPlaceRoutePage\">музей</div>\n      </div>\n      {profileModal && (\n        <div className=\"profileModalRoutesPage\">\n          <ProfileModal\n            textProfileModalActive={textProfileModalActive}\n            setTextProfileModalActive={setTextProfileModalActive}\n          />\n        </div>\n      )}\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}